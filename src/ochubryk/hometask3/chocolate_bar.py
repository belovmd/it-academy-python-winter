# Шоколадка имеет вид прямоугольника, разделенного на n×m долек.
# Шоколадку можно один раз разломить по прямой на две части.
# Определите, можно ли таким образом отломить от шоколадки ровно k долек.
# Определите, можно ли отломить от шоколадки ровно k одиночных долек.
# Определите, можно ли отломить от шоколадки ровно k
# одиночных долек с помощью m разломов


def chocolate(n: int, m: int, k: int) -> bool:
    return (n % k == 0 or m % k == 0) and k < (n * m)


"""
Шоколадку по условию можно один раз разломить на две части.
Из этого следует, что:
1) нельзя отломить  количество долек k меньше, чем m или n;
2) нельзя отломить больше, чем общее количество долек m * n.
"""
# Количество долек k равно стороне m и равно стороне n
# (k== m == n), общее количество долек(m*n) больше количества долек k

assert chocolate(7, 7, 7), "True"

# Количество долек k равно стороне n (k== n),
# общее количество долек(m*n) больше количества долек k

assert chocolate(6, 12, 6), "True"

# Количество долек k не кратно ни стороне n, ни стороне m,
# общее количество долек(m*n) больше количества долек k

assert not chocolate(5, 15, 4), "False"

# Количество долек k не кратно ни стороне n, ни стороне m,
# общее количество долек(m*n) меньше количества долек k

assert not chocolate(8, 8, 70), "False"
"""
У нас все то же условие, при котором шоколадку можно один раз
разломить по прямой на две части.
Из этого следует, что за 1 раз мы можем отломить только 1 дольку, если:
m = 1 или n = 1
"""


def chocolate2(n: int, m: int,) -> bool:
    return (n == 1 and m > 1) or (m == 1 and n > 1)


# Одна из сторон шоколадки равна 1, вторая больше 1

assert chocolate2(1, 2), "True"

# Обе стороны шоколадки больше 1

assert not chocolate2(7, 7), "False"
"""
При новом условии, мы можем сделать m разломов (при этом m = высота шоколадки),
должны получить ровно k одиночных долек.
Если n > 1 и m = k, возможно получить ровно k долек.
Иначе получить ровно k долек невозможно.
"""


def chocolate3(n: int, m: int, k: int) -> bool:
    return n > 1 and m == k


# Одна из сторон шоколадки больше 1, вторая сторона равна
# количеству разломов и равна количеству одиночных долек

assert chocolate3(7, 7, 7), "True"

# Одна из сторон шоколадки больше 1, вторая сторона равна
# количеству разломов и равна количеству одиночных долек

assert chocolate3(6, 14, 14), "True"

# Одна из сторон шоколадки равна 1, вторая сторона равна
# количеству разломов и равна количеству одиночных долек

assert not chocolate3(1, 4, 4), "False"

# Одна из сторон шоколадки больше 1, вторая сторона не равна
# количеству разломов и не равна количеству одиночных долек

assert not chocolate3(8, 9, 11), "False"
